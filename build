#!/usr/bin/env bash

_branch=lf-6.1.y-karo-2

pkgbase=linux-gocontroll-tx8m
_srcname=linux-6.1
_kernelname=${pkgbase#linux}
_desc="Linux for GOcontroll Moduline tx8m based systems"
pkgver="6.1"
pkgrel=1
ARCH=arm64
url="http://www.kernel.org/"
license='GPL2'

_dtbs=('arch/arm64/boot/dts/freescale/imx8mm-tx8m-1610-moduline-iv-300.dtb'
	'arch/arm64/boot/dts/freescale/imx8mm-tx8m-1610-moduline-iv-301.dtb'
	'arch/arm64/boot/dts/freescale/imx8mm-tx8m-1610-moduline-iv-303.dtb'
	'arch/arm64/boot/dts/freescale/imx8mm-tx8m-1610-moduline-iv-304.dtb'
	'arch/arm64/boot/dts/freescale/imx8mm-tx8m-1610-moduline-iv-305.dtb'
	'arch/arm64/boot/dts/freescale/imx8mm-tx8m-1610-moduline-iv-306.dtb'
	'arch/arm64/boot/dts/freescale/imx8mm-tx8m-1610-moduline-iv-306-d.dtb'
	'arch/arm64/boot/dts/freescale/imx8mm-tx8m-1610-moduline-mini-103.dtb'
	'arch/arm64/boot/dts/freescale/imx8mm-tx8m-1610-moduline-mini-105.dtb'
	'arch/arm64/boot/dts/freescale/imx8mm-tx8m-1610-moduline-mini-106.dtb'
	'arch/arm64/boot/dts/freescale/imx8mm-tx8m-1610-moduline-mini-107.dtb'
	'arch/arm64/boot/dts/freescale/imx8mm-tx8m-1610-moduline-mini-111.dtb')

#fetch
MAKEFLAGS=-j`nproc`
echo "Shallow cloning linux repo"
if [[ -d ${_srcname} ]]; then
    cd $_srcname
    git fetch --depth=1 origin ${_branch}
    git checkout -b ${_branch} || (git checkout ${_branch} && git reset --hard origin/${_branch})
else
    git clone --depth=1 https://github.com/GOcontroll/GOcontroll-tx-linux.git ${_srcname} -b ${_branch}
	cd $_srcname
fi

echo "Setting version..."
echo "-$pkgrel" > localversion.10-pkgrel
echo "${pkgbase#linux}" > localversion.20-pkgname
make -s kernelrelease > version

# build!
unset LDFLAGS
make ${MAKEFLAGS} ARCH=arm64 CROSS_COMPILE=aarch64-none-linux-gnu- imx8mm_gocontroll_defconfig
make ${MAKEFLAGS} ARCH=arm64 CROSS_COMPILE=aarch64-none-linux-gnu- Image modules dtbs

# install
# kernel and modules
PKGDIR=../${pkgbase}_${pkgver}-${pkgrel}_${ARCH}

rm -rf `pwd`/${PKGDIR}

install -Dm644 arch/arm64/boot/Image -T ${PKGDIR}/boot/Image

for _dtb in "${_dtbs[@]}"; do
    install -Dm644 "${_dtb}" -t "${PKGDIR}/boot/"
done

kernver="$(<version)"
modulesdir="${PKGDIR}/lib/modules/$kernver"

make INSTALL_MOD_PATH="${PKGDIR}" modules_install

 # remove build and source links if they exist
if [[ -L "$modulesdir"/source ]]; then
    rm "$modulesdir"/source
fi
if [[ -L "$modulesdir"/build ]]; then
    rm "$modulesdir"/build
fi

mkdir -p $PKGDIR/DEBIAN

echo "Package: $pkgbase
Version: $pkgver
Maintainer: Maud Spierings <maudspierings@gocontroll.com>
Architecture: $ARCH
Homepage: http://www.kernel.org/
Description: Linux kernel for GOcontroll Moduline controllers using the tx8m COM module" > ${PKGDIR}/DEBIAN/control

dpkg --build $PKGDIR

# headers

PKGDIR=../${pkgbase}-headers_${pkgver}-${pkgrel}_${ARCH}

rm -rf `pwd`/${PKGDIR}

make ${MAKEFLAGS} ARCH=arm64 CROSS_COMPILE=aarch64-none-linux-gnu- INSTALL_HDR_PATH=${PKGDIR}/usr headers_install

builddir=${PKGDIR}/lib/modules/$(<version)/build
echo "Installing build files..."

install -Dt "$builddir" -m644 .config Makefile Module.symvers System.map \
    localversion.* version
install -Dt "$builddir/kernel" -m644 kernel/Makefile
install -Dt "$builddir/arch/arm64" -m644 arch/arm64/Makefile
cp -t "$builddir" -a scripts

echo "Installing headers..."
cp -t "$builddir" -a include
cp -t "$builddir/arch/arm64" -a arch/arm64/include
install -Dt "$builddir/arch/arm64/kernel" -m644 arch/arm64/kernel/asm-offsets.s
mkdir -p "$builddir/arch/arm"
cp -t "$builddir/arch/arm" -a arch/arm/include

install -Dt "$builddir/drivers/md" -m644 drivers/md/*.h
install -Dt "$builddir/net/mac80211" -m644 net/mac80211/*.h

# https://bugs.archlinux.org/task/13146
install -Dt "$builddir/drivers/media/i2c" -m644 drivers/media/i2c/msp3400-driver.h

# https://bugs.archlinux.org/task/20402
install -Dt "$builddir/drivers/media/usb/dvb-usb" -m644 drivers/media/usb/dvb-usb/*.h
install -Dt "$builddir/drivers/media/dvb-frontends" -m644 drivers/media/dvb-frontends/*.h
install -Dt "$builddir/drivers/media/tuners" -m644 drivers/media/tuners/*.h

# https://bugs.archlinux.org/task/71392
install -Dt "$builddir/drivers/iio/common/hid-sensors" -m644 drivers/iio/common/hid-sensors/*.h

echo "Installing KConfig files..."
find . -name 'Kconfig*' -exec install -Dm644 {} "$builddir/{}" \;

echo "Removing unneeded architectures..."

for arch in "$builddir"/arch/*/; do
    [[ $arch = */arm64/ || $arch == */arm/ ]] && continue
    echo "Removing $(basename "$arch")"
    rm -r "$arch"
done

echo "Removing documentation..."
rm -r "$builddir/Documentation"

echo "Removing broken symlinks..."
find -L "$builddir" -type l -printf 'Removing %P\n' -delete

echo "Removing loose objects..."
find "$builddir" -type f -name '*.o' -printf 'Removing %P\n' -delete

echo "Stripping build tools..."
while read -rd '' file; do
    case "$(file -bi "$file")" in
      application/x-sharedlib\;*)      # Libraries (.so)
        strip -v $STRIP_SHARED "$file" ;;
      application/x-archive\;*)        # Libraries (.a)
        strip -v $STRIP_STATIC "$file" ;;
      application/x-executable\;*)     # Binaries
        strip -v $STRIP_BINARIES "$file" ;;
      application/x-pie-executable\;*) # Relocatable binaries
        strip -v $STRIP_SHARED "$file" ;;
    esac
done < <(find "$builddir" -type f -perm -u+x ! -name vmlinux -print0)

echo "Adding symlink..."
mkdir -p "$PKGDIR/usr/src"
ln -sr "$builddir" "$PKGDIR/usr/src/$pkgbase"

mkdir -p $PKGDIR/DEBIAN

echo "Package: ${pkgbase}-headers
Version: $pkgver
Maintainer: Maud Spierings <maudspierings@gocontroll.com>
Architecture: $ARCH
Homepage: http://www.kernel.org/
Description: Linux kernel headers for GOcontroll Moduline controllers using the tx8m COM module" > ${PKGDIR}/DEBIAN/control

dpkg --build $PKGDIR